diff -ur original/0ad-0.0.22-alpha/build/premake/premake4/build/gmake.unix/Premake4.make 0ad-0.0.22-alpha/build/premake/premake4/build/gmake.unix/Premake4.make
--- original/0ad-0.0.22-alpha/build/premake/premake4/build/gmake.unix/Premake4.make	2012-07-22 02:52:37.033816576 +0000
+++ 0ad-0.0.22-alpha/build/premake/premake4/build/gmake.unix/Premake4.make	2017-12-07 16:37:21.289931264 +0000
@@ -28,8 +28,8 @@
   CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
   CFLAGS    += $(CPPFLAGS) -Wall -Os
   CXXFLAGS  += $(CPPFLAGS) -Wall -Os
-  LDFLAGS   += -s -rdynamic
-  LIBS      += -lm -ldl 
+  LDFLAGS   += -s -Wl, --export-dynamic
+  LIBS      += -lm
   RESFLAGS  += $(DEFINES) $(INCLUDES) 
   LDDEPS    += 
   LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(LDDEPS) $(LIBS)
@@ -302,4 +302,4 @@
 	$(SILENT) $(CC) $(PCHINCLUDES) $(CFLAGS) -MF $(OBJDIR)/lauxlib.d -MT "$@" -o "$@" -c "$<"
 
 -include $(OBJECTS:%.o=%.d)
--include $(GCH:%.h.gch=%.h.d)
\ No newline at end of file
+-include $(GCH:%.h.gch=%.h.d)
Only in 0ad-0.0.22-alpha/build/premake/premake4/build/gmake.unix: Premake4.make.old
diff -ur original/0ad-0.0.22-alpha/build/premake/premake4/premake4.lua 0ad-0.0.22-alpha/build/premake/premake4/premake4.lua
--- original/0ad-0.0.22-alpha/build/premake/premake4/premake4.lua	2012-08-19 18:49:02.033292288 +0000
+++ 0ad-0.0.22-alpha/build/premake/premake4/premake4.lua	2017-12-03 08:06:49.206569472 +0000
@@ -65,12 +65,15 @@
 			buildoptions{ "-mmacosx-version-min=10.4" }
 			linkoptions { "-mmacosx-version-min=10.4" }
 
-		configuration { "not windows", "not solaris", "not macosx" }
+		configuration { "not windows", "not solaris", "not 
+macosx", "not haiku" }
 			linkoptions { "-rdynamic" }
 			
 		configuration { "solaris" }
 			linkoptions { "-Wl,--export-dynamic" }
 
+		configuration { "haiku" }
+			linkoptions { "-Wl,--export-dynamic" }
 
 
 --
diff -ur original/0ad-0.0.22-alpha/build/premake/premake4.lua 0ad-0.0.22-alpha/build/premake/premake4.lua
--- original/0ad-0.0.22-alpha/build/premake/premake4.lua	2017-07-06 17:29:49.012845056 +0000
+++ 0ad-0.0.22-alpha/build/premake/premake4.lua	2017-12-03 08:39:11.733216768 +0000
@@ -832,6 +832,7 @@
 		windows = { "lib/sysdep/os/win", "lib/sysdep/os/win/wposix", "lib/sysdep/os/win/whrt" },
 		macosx = { "lib/sysdep/os/osx", "lib/sysdep/os/unix" },
 		bsd = { "lib/sysdep/os/bsd", "lib/sysdep/os/unix", "lib/sysdep/os/unix/x" },
+		haiku = { "lib/sysdep/os/unix" }
 	}
 	for i,v in pairs(sysdep_dirs[os.get()]) do
 		table.insert(source_dirs, v);
diff -ur original/0ad-0.0.22-alpha/build/workspaces/update-workspaces.sh 0ad-0.0.22-alpha/build/workspaces/update-workspaces.sh
--- original/0ad-0.0.22-alpha/build/workspaces/update-workspaces.sh	2016-09-02 16:18:57.049807360 +0000
+++ 0ad-0.0.22-alpha/build/workspaces/update-workspaces.sh	2017-12-07 16:15:26.853016576 +0000
@@ -1,8 +1,10 @@
 #!/bin/sh
 
-if [ "$(id -u)" = "0" ]; then
-   echo "Running as root will mess up file permissions. Aborting ..." 1>&2
-   exit 1
+if [ "`uname -s`" != "Haiku" ]; then
+    if [ "$(id -u)" = "0" ]; then
+   	    echo "Running as root will mess up file permissions. Aborting ..." 1>&2
+   	    exit 1
+    fi
 fi
 
 die()
@@ -41,7 +43,7 @@
 without_nvtt=false
 with_system_nvtt=false
 with_system_mozjs38=false
-enable_atlas=true
+enable_atlas=false
 
 for i in "$@"
 do
@@ -81,10 +83,12 @@
   echo
 
   # Build/update bundled external libraries
+  echo ${MAKE}
   (cd ../../libraries/source/fcollada/src && ${MAKE} ${JOBS}) || die "FCollada build failed"
   echo
   if [ "$with_system_mozjs38" = "false" ]; then
-    (cd ../../libraries/source/spidermonkey && MAKE=${MAKE} JOBS=${JOBS} ./build.sh) || die "SpiderMonkey build failed"
+    (cd ../../libraries/source/spidermonkey && MAKE=${MAKE} JOBS=${JOBS} 
+./build.sh) || die "SpiderMonkey build failed"
   fi
   echo
   if [ "$with_system_nvtt" = "false" ] && [ "$without_nvtt" = "false" ]; then
diff -ur original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUAssert.cpp 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUAssert.cpp
--- original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUAssert.cpp	2017-07-10 21:53:47.036175872 +0000
+++ 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUAssert.cpp	2017-12-02 11:13:54.025690112 +0000
@@ -12,7 +12,12 @@
 #include "FUAssert.h"
 
 #ifndef WIN32
-	#include "sys/signal.h" // Used for throw(SIGTRAP) on UNIX-like systems
+	#ifdef __HAIKU__
+		#include <signal.h>
+	#else
+		#include "sys/signal.h" // Used for throw(SIGTRAP) on 
+UNIX-like systems
+	#endif
 #endif
 
 #ifdef __APPLE__
diff -ur original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUPluginManager.cpp 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUPluginManager.cpp
--- original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUPluginManager.cpp	2010-04-19 21:56:45.031981568 +0000
+++ 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUPluginManager.cpp	2017-12-07 16:27:38.493092864 +0000
@@ -29,6 +29,10 @@
 	#include <dirent.h>
 #endif //WIN32
 
+#ifdef __HAIKU__
+	#include <sys/stat.h>
+#endif
+
 //
 // FUPlugin
 //
@@ -129,6 +133,10 @@
 		}
 
 #elif defined(__APPLE__) || defined(LINUX)
+		#ifdef __HAIKU__
+			struct stat s;
+		#endif
+
 		fm::string s_filter = TO_STRING(filter);
 		if (s_filter.length() > 0 && s_filter.front() == '*') s_filter.erase(0, 1);
 		if (s_filter.length() > 0 && s_filter.back() == '*') s_filter.pop_back();
@@ -139,7 +147,13 @@
 		dirent* directoryEntry;
 		while ((directoryEntry = readdir(directory)) != NULL)
 		{
+#if __HAIKU__
+			stat(directoryEntry->d_name, &s);
+			if (S_ISDIR(s.st_mode)) continue;
+#else
 			if (directoryEntry->d_type == DT_DIR) continue; // skip sub-folders.
+#endif
+			
 			if (strstr((const char*) directoryEntry->d_name, s_filter.c_str()) != NULL)
 			{
 				// We have a match.
diff -ur original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUStringBuilder.h 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUStringBuilder.h
--- original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUStringBuilder.h	2012-06-04 21:33:15.033554432 +0000
+++ 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUStringBuilder.h	2017-12-02 10:39:43.400556032 +0000
@@ -135,7 +135,7 @@
 #else
 	inline void append(unsigned int i) { append((uint32) i); } /**< See above. */
 #endif
-#elif defined(__APPLE__) || defined(__OpenBSD__)
+#elif defined(__APPLE__) || defined(__OpenBSD__) || defined(__HAIKU__)
 	inline void append(size_t i) { append((uint64)i); }
 #endif // defined(WIN32)
 
Only in 0ad-0.0.22-alpha/libraries/source/fcollada/src: output
diff -ur original/0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/nvcore.h 0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/nvcore.h
--- original/0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/nvcore.h	2015-07-21 15:53:21.018612224 +0000
+++ 0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/nvcore.h	2017-12-07 16:04:10.872153088 +0000
@@ -38,6 +38,9 @@
 #if defined POSH_OS_LINUX
 #	define NV_OS_LINUX 1
 #	define NV_OS_UNIX 1
+#elif defined __HAIKU__
+#	define NV_OS_LINUX 1
+#	define NV_OS_UNIX 1
 #elif defined POSH_OS_FREEBSD
 #	define NV_OS_FREEBSD 1
 #	define NV_OS_UNIX 1
diff -ur original/0ad-0.0.22-alpha/libraries/source/spidermonkey/build.sh 0ad-0.0.22-alpha/libraries/source/spidermonkey/build.sh
--- original/0ad-0.0.22-alpha/libraries/source/spidermonkey/build.sh	2016-10-04 15:01:34.023855104 +0000
+++ 0ad-0.0.22-alpha/libraries/source/spidermonkey/build.sh	2017-12-07 16:02:28.538443776 +0000
@@ -88,7 +88,7 @@
 cd $FOLDER
 
 # Apply patches
-. ../patch.sh
+$SHELL ../patch.sh
 
 cd js/src
 
diff -ur original/0ad-0.0.22-alpha/source/lib/secure_crt.h 0ad-0.0.22-alpha/source/lib/secure_crt.h
--- original/0ad-0.0.22-alpha/source/lib/secure_crt.h	2017-07-10 14:26:24.008126464 +0000
+++ 0ad-0.0.22-alpha/source/lib/secure_crt.h	2017-12-03 09:07:26.405798912 +0000
@@ -53,7 +53,7 @@
 // first <max_len> characters are examined; if the null character is
 // not encountered by then, <max_len> is returned.
 // strnlen is available on OpenBSD
-#if !OS_OPENBSD
+#if !OS_OPENBSD && !defined(__HAIKU__)
 extern size_t strnlen(const char* str, size_t max_len);
 #endif
 extern size_t wcsnlen(const wchar_t* str, size_t max_len);
