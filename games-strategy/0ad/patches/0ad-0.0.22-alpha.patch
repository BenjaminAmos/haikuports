diff -urN original/0ad-0.0.22-alpha/build/premake/premake4/build/gmake.unix/Premake4.make 0ad-0.0.22-alpha/build/premake/premake4/build/gmake.unix/Premake4.make
--- original/0ad-0.0.22-alpha/build/premake/premake4/build/gmake.unix/Premake4.make	2012-07-22 02:52:37.033816576 +0000
+++ 0ad-0.0.22-alpha/build/premake/premake4/build/gmake.unix/Premake4.make	2017-12-12 17:07:35.464519168 +0000
@@ -28,10 +28,10 @@
   CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
   CFLAGS    += $(CPPFLAGS) -Wall -Os
   CXXFLAGS  += $(CPPFLAGS) -Wall -Os
-  LDFLAGS   += -s -rdynamic
-  LIBS      += -lm -ldl 
-  RESFLAGS  += $(DEFINES) $(INCLUDES) 
-  LDDEPS    += 
+  LDFLAGS   += -s -Wl,--export-dynamic
+  LIBS      += -lm
+  RESFLAGS  += $(DEFINES) $(INCLUDES)
+  LDDEPS    +=
   LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(LDDEPS) $(LIBS)
   define PREBUILDCMDS
   endef
@@ -50,10 +50,10 @@
   CPPFLAGS  += -MMD -MP $(DEFINES) $(INCLUDES)
   CFLAGS    += $(CPPFLAGS) -Wall -g
   CXXFLAGS  += $(CPPFLAGS) -Wall -g
-  LDFLAGS   += -rdynamic
-  LIBS      += -lm -ldl 
-  RESFLAGS  += $(DEFINES) $(INCLUDES) 
-  LDDEPS    += 
+  LDFLAGS   += -Wl,--export-dynamic
+  LIBS      += -lm -ldl
+  RESFLAGS  += $(DEFINES) $(INCLUDES)
+  LDDEPS    +=
   LINKCMD    = $(CC) -o $(TARGET) $(OBJECTS) $(LDFLAGS) $(RESOURCES) $(LDDEPS) $(LIBS)
   define PREBUILDCMDS
   endef
@@ -302,4 +302,4 @@
 	$(SILENT) $(CC) $(PCHINCLUDES) $(CFLAGS) -MF $(OBJDIR)/lauxlib.d -MT "$@" -o "$@" -c "$<"
 
 -include $(OBJECTS:%.o=%.d)
--include $(GCH:%.h.gch=%.h.d)
\ No newline at end of file
+-include $(GCH:%.h.gch=%.h.d)
diff -urN original/0ad-0.0.22-alpha/build/premake/premake4/premake4.lua 0ad-0.0.22-alpha/build/premake/premake4/premake4.lua
--- original/0ad-0.0.22-alpha/build/premake/premake4/premake4.lua	2012-08-19 18:49:02.033292288 +0000
+++ 0ad-0.0.22-alpha/build/premake/premake4/premake4.lua	2017-12-03 08:06:49.206569472 +0000
@@ -65,12 +65,15 @@
 			buildoptions{ "-mmacosx-version-min=10.4" }
 			linkoptions { "-mmacosx-version-min=10.4" }
 
-		configuration { "not windows", "not solaris", "not macosx" }
+		configuration { "not windows", "not solaris", "not 
+macosx", "not haiku" }
 			linkoptions { "-rdynamic" }
 			
 		configuration { "solaris" }
 			linkoptions { "-Wl,--export-dynamic" }
 
+		configuration { "haiku" }
+			linkoptions { "-Wl,--export-dynamic" }
 
 
 --
diff -urN original/0ad-0.0.22-alpha/build/premake/premake4.lua 0ad-0.0.22-alpha/build/premake/premake4.lua
--- original/0ad-0.0.22-alpha/build/premake/premake4.lua	2017-07-06 17:29:49.012845056 +0000
+++ 0ad-0.0.22-alpha/build/premake/premake4.lua	2017-12-03 08:39:11.733216768 +0000
@@ -832,6 +832,7 @@
 		windows = { "lib/sysdep/os/win", "lib/sysdep/os/win/wposix", "lib/sysdep/os/win/whrt" },
 		macosx = { "lib/sysdep/os/osx", "lib/sysdep/os/unix" },
 		bsd = { "lib/sysdep/os/bsd", "lib/sysdep/os/unix", "lib/sysdep/os/unix/x" },
+		haiku = { "lib/sysdep/os/unix" }
 	}
 	for i,v in pairs(sysdep_dirs[os.get()]) do
 		table.insert(source_dirs, v);
diff -urN original/0ad-0.0.22-alpha/build/workspaces/update-workspaces.sh 0ad-0.0.22-alpha/build/workspaces/update-workspaces.sh
--- original/0ad-0.0.22-alpha/build/workspaces/update-workspaces.sh	2016-09-02 16:18:57.049807360 +0000
+++ 0ad-0.0.22-alpha/build/workspaces/update-workspaces.sh	2017-12-08 18:16:40.301727744 +0000
@@ -1,8 +1,10 @@
 #!/bin/sh
 
-if [ "$(id -u)" = "0" ]; then
-   echo "Running as root will mess up file permissions. Aborting ..." 1>&2
-   exit 1
+if [ "`uname -s`" != "Haiku" ]; then
+    if [ "$(id -u)" = "0" ]; then
+   	    echo "Running as root will mess up file permissions. Aborting ..." 1>&2
+   	    exit 1
+    fi
 fi
 
 die()
@@ -41,7 +43,7 @@
 without_nvtt=false
 with_system_nvtt=false
 with_system_mozjs38=false
-enable_atlas=true
+enable_atlas=false
 
 for i in "$@"
 do
@@ -81,10 +83,12 @@
   echo
 
   # Build/update bundled external libraries
+  echo ${MAKE}
   (cd ../../libraries/source/fcollada/src && ${MAKE} ${JOBS}) || die "FCollada build failed"
   echo
   if [ "$with_system_mozjs38" = "false" ]; then
-    (cd ../../libraries/source/spidermonkey && MAKE=${MAKE} JOBS=${JOBS} ./build.sh) || die "SpiderMonkey build failed"
+    (cd ../../libraries/source/spidermonkey && MAKE=${MAKE} JOBS=${JOBS}
+./build.sh) || die "SpiderMonkey build failed"
   fi
   echo
   if [ "$with_system_nvtt" = "false" ] && [ "$without_nvtt" = "false" ]; then
diff -urN original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUAssert.cpp 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUAssert.cpp
--- original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUAssert.cpp	2017-07-10 21:53:47.036175872 +0000
+++ 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUAssert.cpp	2017-12-02 11:13:54.025690112 +0000
@@ -12,7 +12,12 @@
 #include "FUAssert.h"
 
 #ifndef WIN32
-	#include "sys/signal.h" // Used for throw(SIGTRAP) on UNIX-like systems
+	#ifdef __HAIKU__
+		#include <signal.h>
+	#else
+		#include "sys/signal.h" // Used for throw(SIGTRAP) on 
+UNIX-like systems
+	#endif
 #endif
 
 #ifdef __APPLE__
diff -urN original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUPluginManager.cpp 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUPluginManager.cpp
--- original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUPluginManager.cpp	2010-04-19 21:56:45.031981568 +0000
+++ 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUPluginManager.cpp	2017-12-07 16:27:38.493092864 +0000
@@ -29,6 +29,10 @@
 	#include <dirent.h>
 #endif //WIN32
 
+#ifdef __HAIKU__
+	#include <sys/stat.h>
+#endif
+
 //
 // FUPlugin
 //
@@ -129,6 +133,10 @@
 		}
 
 #elif defined(__APPLE__) || defined(LINUX)
+		#ifdef __HAIKU__
+			struct stat s;
+		#endif
+
 		fm::string s_filter = TO_STRING(filter);
 		if (s_filter.length() > 0 && s_filter.front() == '*') s_filter.erase(0, 1);
 		if (s_filter.length() > 0 && s_filter.back() == '*') s_filter.pop_back();
@@ -139,7 +147,13 @@
 		dirent* directoryEntry;
 		while ((directoryEntry = readdir(directory)) != NULL)
 		{
+#if __HAIKU__
+			stat(directoryEntry->d_name, &s);
+			if (S_ISDIR(s.st_mode)) continue;
+#else
 			if (directoryEntry->d_type == DT_DIR) continue; // skip sub-folders.
+#endif
+			
 			if (strstr((const char*) directoryEntry->d_name, s_filter.c_str()) != NULL)
 			{
 				// We have a match.
diff -urN original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUStringBuilder.h 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUStringBuilder.h
--- original/0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUStringBuilder.h	2012-06-04 21:33:15.033554432 +0000
+++ 0ad-0.0.22-alpha/libraries/source/fcollada/src/FCollada/FUtils/FUStringBuilder.h	2017-12-02 10:39:43.400556032 +0000
@@ -135,7 +135,7 @@
 #else
 	inline void append(unsigned int i) { append((uint32) i); } /**< See above. */
 #endif
-#elif defined(__APPLE__) || defined(__OpenBSD__)
+#elif defined(__APPLE__) || defined(__OpenBSD__) || defined(__HAIKU__)
 	inline void append(size_t i) { append((uint64)i); }
 #endif // defined(WIN32)
 
diff -urN original/0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/Debug.cpp 0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/Debug.cpp
--- original/0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/Debug.cpp	2017-12-14 18:58:45.659292160 +0000
+++ 0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/Debug.cpp	2017-12-12 17:04:03.173015040 +0000
@@ -221,6 +221,14 @@
 			ucontext_t * ucp = (ucontext_t *)secret;
 			return (void *)ucp->sc_eip;
 #		endif
+#	elif defined(__HAIKU__)
+#		if NV_CPU_X86_64
+			ucontext_t * ucp = (ucontext_t *)secret;
+			return (void *)ucp->uc_mcontext.rip;
+#		elif NV_CPU_X86
+			ucontext_t * ucp = (ucontext_t *)secret;
+			return (void* )ucp->uc_mcontext.eip;
+#		endif
 #	else
 #		if NV_CPU_X86_64
 			// #define REG_RIP REG_INDEX(rip) // seems to be 16
diff -urN original/0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/nvcore.h 0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/nvcore.h
--- original/0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/nvcore.h	2015-07-21 15:53:21.018612224 +0000
+++ 0ad-0.0.22-alpha/libraries/source/nvtt/src/src/nvcore/nvcore.h	2017-12-07 16:04:10.872153088 +0000
@@ -38,6 +38,9 @@
 #if defined POSH_OS_LINUX
 #	define NV_OS_LINUX 1
 #	define NV_OS_UNIX 1
+#elif defined __HAIKU__
+#	define NV_OS_LINUX 1
+#	define NV_OS_UNIX 1
 #elif defined POSH_OS_FREEBSD
 #	define NV_OS_FREEBSD 1
 #	define NV_OS_UNIX 1
diff -urN original/0ad-0.0.22-alpha/libraries/source/spidermonkey/build.sh 0ad-0.0.22-alpha/libraries/source/spidermonkey/build.sh
--- original/0ad-0.0.22-alpha/libraries/source/spidermonkey/build.sh	2016-10-04 15:01:34.023855104 +0000
+++ 0ad-0.0.22-alpha/libraries/source/spidermonkey/build.sh	2017-12-07 16:02:28.538443776 +0000
@@ -88,7 +88,7 @@
 cd $FOLDER
 
 # Apply patches
-. ../patch.sh
+$SHELL ../patch.sh
 
 cd js/src
 
diff -urN original/0ad-0.0.22-alpha/libraries/source/spidermonkey/FixHaikuBuild.diff 0ad-0.0.22-alpha/libraries/source/spidermonkey/FixHaikuBuild.diff
--- original/0ad-0.0.22-alpha/libraries/source/spidermonkey/FixHaikuBuild.diff	1970-01-01 00:00:00.000000000 +0000
+++ 0ad-0.0.22-alpha/libraries/source/spidermonkey/FixHaikuBuild.diff	2017-12-16 10:33:23.653787136 +0000
@@ -0,0 +1,195 @@
+diff -ur mozjs-38.0.0-old/js/src/asmjs/AsmJSSignalHandlers.cpp mozjs-38.0.0-new/js/src/asmjs/AsmJSSignalHandlers.cpp
+--- mozjs-38.0.0-old/js/src/asmjs/AsmJSSignalHandlers.cpp	2015-09-17 20:12:18.030670848 +0000
++++ mozjs-38.0.0-new/js/src/asmjs/AsmJSSignalHandlers.cpp	2017-12-16 09:53:06.911736832 +0000
+@@ -200,6 +200,26 @@
+ #elif defined(XP_MACOSX)
+ # define EIP_sig(p) ((p)->uc_mcontext->__ss.__eip)
+ # define RIP_sig(p) ((p)->uc_mcontext->__ss.__rip)
++#elif defined(__HAIKU__)
++# define EIP_sig(p) ((p)->uc_mcontext.eip)
++# if defined(__x86_64__)
++#  define RIP_sig(p) ((p)->uc_mcontext.rip)
++#  define RAX_sig(p) ((p)->uc_mcontext.rax)
++#  define RCX_sig(p) ((p)->uc_mcontext.rcx)
++#  define RDX_sig(p) ((p)->uc_mcontext.rdx)
++#  define RBX_sig(p) ((p)->uc_mcontext.rbx)
++#  define RSP_sig(p) ((p)->uc_mcontext.rsp)
++#  define RBP_sig(p) ((p)->uc_mcontext.rbp)
++#  define RSI_sig(p) ((p)->uc_mcontext.rsi)
++#  define RDI_sig(p) ((p)->uc_mcontext.rdi)
++#  define R8_sig(p) ((p)->uc_mcontext.r8)
++#  define R9_sig(p) ((p)->uc_mcontext.r9)
++#  define R10_sig(p) ((p)->uc_mcontext.r10)
++#  define R11_sig(p) ((p)->uc_mcontext.r11)
++#  define R12_sig(p) ((p)->uc_mcontext.r12)
++#  define R13_sig(p) ((p)->uc_mcontext.r13)
++#  define R14_sig(p) ((p)->uc_mcontext.r14)
++# endif
+ #else
+ # error "Don't know how to read/write to the thread state via the mcontext_t."
+ #endif
+diff -ur mozjs-38.0.0-old/js/src/configure mozjs-38.0.0-new/js/src/configure
+--- mozjs-38.0.0-old/js/src/configure	2017-12-16 10:03:35.259260416 +0000
++++ mozjs-38.0.0-new/js/src/configure	2017-12-16 10:28:47.306446336 +0000
+@@ -4408,7 +4408,12 @@
+   esac
+ fi
+
++#HACK: The python modules search path is not being correctly set. This is done manually here.
++echo import site > $MOZ_BUILD_ROOT/_virtualenv/lib/python2.7/site-packages/sitecustomize.py
++echo "site.addsitedir('$MOZ_BUILD_ROOT/_virtualenv/non-packaged/lib/python2.7/site-packages/')" >> $MOZ_BUILD_ROOT/_virtualenv/lib/python2.7/site-packages/sitecustomize.py
+
++#HACK: The process.py script cannot detect the built-in variable so it should be redefined.
++export SHELL=/bin/bash
+
+ echo $ac_n "checking Python environment is Mozilla virtualenv""... $ac_c" 1>&6
+ echo "configure:4479: checking Python environment is Mozilla virtualenv" >&5
+diff -ur mozjs-38.0.0-old/js/src/gc/Memory.cpp mozjs-38.0.0-new/js/src/gc/Memory.cpp
+--- mozjs-38.0.0-old/js/src/gc/Memory.cpp	2015-09-17 20:12:18.031719424 +0000
++++ mozjs-38.0.0-new/js/src/gc/Memory.cpp	2017-12-16 09:53:06.915931136 +0000
+@@ -22,7 +22,7 @@
+ #include <sys/mman.h>
+ #include <unistd.h>
+
+-#elif defined(XP_UNIX)
++#elif defined(XP_UNIX) || defined(__HAIKU__)
+
+ #include <algorithm>
+ #include <errno.h>
+@@ -44,7 +44,7 @@
+ // The OS allocation granularity may not match the page size.
+ static size_t allocGranularity = 0;
+
+-#if defined(XP_UNIX)
++#if defined(XP_UNIX) || defined(__HAIKU__)
+ // The addresses handed out by mmap may grow up or down.
+ static mozilla::Atomic<int, mozilla::Relaxed> growthDirection(0);
+ #endif
+@@ -366,7 +366,7 @@
+     // Not implemented.
+ }
+
+-#elif defined(XP_UNIX)
++#elif defined(XP_UNIX) || defined(__HAIKU__)
+
+ void
+ InitMemorySubsystem()
+@@ -604,7 +604,11 @@
+         return false;
+
+     MOZ_ASSERT(OffsetFromAligned(p, pageSize) == 0);
++#if defined(__HAIKU__)
++    int result = posix_madvise(p, size, POSIX_MADV_DONTNEED);
++#else
+     int result = madvise(p, size, MADV_DONTNEED);
++#endif
+     return result != -1;
+ }
+
+@@ -625,7 +629,12 @@
+     int err = getrusage(RUSAGE_SELF, &usage);
+     if (err)
+         return 0;
++#if defined(__HAIKU__)
++	//HACK: the ru_majfly variable does not exist in POSIX
++	return 0;
++#else
+     return usage.ru_majflt;
++#endif
+ }
+
+ void*
+diff -ur mozjs-38.0.0-old/js/src/jsnativestack.cpp mozjs-38.0.0-new/js/src/jsnativestack.cpp
+--- mozjs-38.0.0-old/js/src/jsnativestack.cpp	2015-09-17 20:12:22.031195136 +0000
++++ mozjs-38.0.0-new/js/src/jsnativestack.cpp	2017-12-16 09:53:06.916455424 +0000
+@@ -9,9 +9,11 @@
+ #ifdef XP_WIN
+ # include "jswin.h"
+
+-#elif defined(XP_MACOSX) || defined(DARWIN) || defined(XP_UNIX)
++#elif defined(XP_MACOSX) || defined(DARWIN) || defined(XP_UNIX) || defined(__HAIKU__)
+ # include <pthread.h>
+-
++# if defined(__HAIKU__)
++   #include <OS.h>
++# endif
+ # if defined(__FreeBSD__) || defined(__OpenBSD__) || defined(__DragonFly__)
+ #  include <pthread_np.h>
+ # endif
+@@ -101,6 +103,9 @@
+ #  elif defined(PTHREAD_NP_H) || defined(_PTHREAD_NP_H_) || defined(NETBSD)
+     /* e.g. on FreeBSD 4.8 or newer, neundorf@kde.org */
+     pthread_attr_get_np(thread, &sattr);
++#  elif defined(__HAIKU__)
++    //HACK: Haiku does not implement pthread_getattr_np as it is not POSIX
++    //get_thread_info(thread, &sattr->id);
+ #  else
+     /*
+      * FIXME: this function is non-portable;
+@@ -143,6 +148,8 @@
+         // For non main-threads pthread allocates the stack itself so it tells
+         // the truth.
+         rc = pthread_attr_getstack(&sattr, &stackBase, &stackSize);
++# elif defined(__HAIKU__)
++    rc = 0;
+ # else
+     rc = pthread_attr_getstack(&sattr, &stackBase, &stackSize);
+ # endif
+diff -ur mozjs-38.0.0-old/js/src/shell/js.cpp mozjs-38.0.0-new/js/src/shell/js.cpp
+--- mozjs-38.0.0-old/js/src/shell/js.cpp	2015-09-17 20:12:22.004194304 +0000
++++ mozjs-38.0.0-new/js/src/shell/js.cpp	2017-12-16 09:53:06.917766144 +0000
+@@ -32,7 +32,7 @@
+ #include <string.h>
+ #include <sys/stat.h>
+ #include <sys/types.h>
+-#ifdef XP_UNIX
++#if defined(XP_UNIX) || defined(__HAIKU__)
+ # include <sys/mman.h>
+ # include <sys/stat.h>
+ # include <sys/wait.h>
+@@ -5892,7 +5892,7 @@
+     if (!ptr)
+         return 0;
+
+-#if defined(HAVE_MALLOC_USABLE_SIZE)
++#if defined(HAVE_MALLOC_USABLE_SIZE) && !defined(__HAIKU__)
+     return malloc_usable_size(ptr);
+ #elif defined(HAVE_MALLOC_SIZE)
+     return malloc_size(ptr);
+Only in mozjs-38.0.0-new/layout/tools/reftest/reftest: __init__.pyc
+diff -ur mozjs-38.0.0-old/mfbt/Poison.cpp mozjs-38.0.0-new/mfbt/Poison.cpp
+--- mozjs-38.0.0-old/mfbt/Poison.cpp	2015-09-17 20:12:16.000524288 +0000
++++ mozjs-38.0.0-new/mfbt/Poison.cpp	2017-12-16 09:53:06.918552576 +0000
+@@ -129,7 +129,11 @@
+ static bool
+ ProbeRegion(uintptr_t aRegion, uintptr_t aSize)
+ {
++#ifdef __HAIKU__
++  if (posix_madvise(reinterpret_cast<void*>(aRegion), aSize, POSIX_MADV_NORMAL)) {
++#else
+   if (madvise(reinterpret_cast<void*>(aRegion), aSize, MADV_NORMAL)) {
++#endif
+     return true;
+   } else {
+     return false;
+diff -ur mozjs-38.0.0-old/python/psutil/setup.py mozjs-38.0.0-new/python/psutil/setup.py
+--- mozjs-38.0.0-old/python/psutil/setup.py	2015-09-17 20:12:23.004456448 +0000
++++ mozjs-38.0.0-new/python/psutil/setup.py	2017-12-16 09:53:06.919076864 +0000
+@@ -125,6 +125,18 @@
+         libraries=['kstat', 'nsl'],),
+         posix_extension,
+     ]
++# Haiku
++elif sys.platform.startswith("haiku"):
++    extensions = []
++    """extensions = [Extension(
++        '_psutil_haiku',
++        sources=[
++            #'psutil/_psutil_bsd.c',
++            'psutil/_psutil_common.c',
++            #'psutil/arch/bsd/process_info.c'
++        ]),
++        posix_extension,
++    ]"""
+ else:
+     sys.exit('platform %s is not supported' % sys.platform)
diff -urN original/0ad-0.0.22-alpha/libraries/source/spidermonkey/patch.sh 0ad-0.0.22-alpha/libraries/source/spidermonkey/patch.sh
--- original/0ad-0.0.22-alpha/libraries/source/spidermonkey/patch.sh	2016-09-25 10:20:55.023855104 +0000
+++ 0ad-0.0.22-alpha/libraries/source/spidermonkey/patch.sh	2017-12-16 10:05:24.551813120 +0000
@@ -48,3 +48,6 @@
 #    Always make sure there are 3 free slots for events.
 # ===
 patch -p1  < ../FixTracelogger.diff
+
+#Fixes the Haiku build by adding it as a recognised platform
+patch -p1 < ../FixHaikuBuild.diff
diff -urN original/0ad-0.0.22-alpha/source/lib/posix/posix_aio.h 0ad-0.0.22-alpha/source/lib/posix/posix_aio.h
--- original/0ad-0.0.22-alpha/source/lib/posix/posix_aio.h	2017-07-10 14:26:24.051380224 +0000
+++ 0ad-0.0.22-alpha/source/lib/posix/posix_aio.h	2017-12-12 17:18:46.022544384 +0000
@@ -30,7 +30,7 @@
 
 #if OS_WIN
 # include "lib/sysdep/os/win/wposix/waio.h"
-#elif OS_ANDROID || OS_OPENBSD
+#elif OS_ANDROID || OS_OPENBSD || __HAIKU__
 // Android doesn't provide aio.h. We don't actually use aio on Linuxes (see
 // CONFIG2_FILE_ENABLE_AIO) but we use its symbols and structs, so define
 // them here
diff -urN original/0ad-0.0.22-alpha/source/lib/secure_crt.h 0ad-0.0.22-alpha/source/lib/secure_crt.h
--- original/0ad-0.0.22-alpha/source/lib/secure_crt.h	2017-07-10 14:26:24.008126464 +0000
+++ 0ad-0.0.22-alpha/source/lib/secure_crt.h	2017-12-03 09:07:26.405798912 +0000
@@ -53,7 +53,7 @@
 // first <max_len> characters are examined; if the null character is
 // not encountered by then, <max_len> is returned.
 // strnlen is available on OpenBSD
-#if !OS_OPENBSD
+#if !OS_OPENBSD && !defined(__HAIKU__)
 extern size_t strnlen(const char* str, size_t max_len);
 #endif
 extern size_t wcsnlen(const wchar_t* str, size_t max_len);
diff -urN original/0ad-0.0.22-alpha/source/scriptinterface/ScriptInterface.h 0ad-0.0.22-alpha/source/scriptinterface/ScriptInterface.h
--- original/0ad-0.0.22-alpha/source/scriptinterface/ScriptInterface.h	2017-03-24 18:47:03.040632320 +0000
+++ 0ad-0.0.22-alpha/source/scriptinterface/ScriptInterface.h	2017-12-12 19:08:25.951320576 +0000
@@ -26,6 +26,8 @@
 #include "ScriptTypes.h"
 #include "ps/Errors.h"
 
+#include <map>
+
 ERROR_GROUP(Scripting);
 ERROR_TYPE(Scripting, SetupFailed);
 
diff -urN original/0ad-0.0.22-alpha/source/simulation2/serialization/SerializeTemplates.h 0ad-0.0.22-alpha/source/simulation2/serialization/SerializeTemplates.h
--- original/0ad-0.0.22-alpha/source/simulation2/serialization/SerializeTemplates.h	2016-05-02 09:26:07.050855936 +0000
+++ 0ad-0.0.22-alpha/source/simulation2/serialization/SerializeTemplates.h	2017-12-12 19:16:02.241958912 +0000
@@ -24,6 +24,7 @@
  */
 
 #include "simulation2/components/ICmpPathfinder.h"
+#include <boost/unordered_map.hpp>
 
 template<typename ELEM>
 struct SerializeVector
diff -urN original/0ad-0.0.22-alpha/source/simulation2/system/ComponentManager.h 0ad-0.0.22-alpha/source/simulation2/system/ComponentManager.h
--- original/0ad-0.0.22-alpha/source/simulation2/system/ComponentManager.h	2017-02-22 19:27:58.053739520 +0000
+++ 0ad-0.0.22-alpha/source/simulation2/system/ComponentManager.h	2017-12-12 19:18:08.235405312 +0000
@@ -26,7 +26,7 @@
 #include "ps/Filesystem.h"
 
 #include <boost/random/linear_congruential.hpp>
-#include <boost/unordered_map.hpp>
+//#include <boost/unordered_map.hpp>
 
 #include <map>
 #include <unordered_map>
